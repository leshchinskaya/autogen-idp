[
    {
      "category": "Алгоритмы_работы_с_фичами",
      "skillName": "Определение местоположения",
      "level": 1,
      "goal": "Научиться тестировать подмену геопозиции",
      "description": "- Попробовать протестировать определение местоположения на проекте с использованием чеклиста <https://jira.surfstudio.ru/browse/SURFQA-839>\n- Попробовать потестировать геолокацию с помощью подмены https://wiki.surfstudio.ru/pages/viewpage.action?pageId=2396518",
      "criteria": "Плановый результат: освоены ключевые действия по теме и задокументированы результаты.\nОжидаемый результат: демонстрация на проекте/песочнице и наличие артефактов (доки, скриншоты, отчеты).\nПроверка корректности: ревью ментора/лида; критерии приемки пройдены без замечаний.",
      "durationWeeks": 3
    },
    {
      "category": "Аналитика",
      "skillName": "Firebase",
      "level": 1,
      "goal": "Изучить больше возможностей, которые предоставляет firebase, понять принцип работы Remote Config",
      "description": "- Прочитать статью про Remote Config в Firebase <https://firebase.google.com/docs/remote-config?hl=ru>\n- Посмотреть интерфейс Remote Config в Firebase на примере приложений студии, изучит принцип работы (Зенит)",
      "criteria": "Плановый результат: освоены ключевые действия по теме и задокументированы результаты.\nОжидаемый результат: демонстрация на проекте/песочнице и наличие артефактов (доки, скриншоты, отчеты).\nПроверка корректности: ревью ментора/лида; критерии приемки пройдены без замечаний.",
      "durationWeeks": 2
    },
    {
      "category": "Артефакты_тестирования",
      "skillName": "Критерии качества требований",
      "level": 1,
      "goal": "Изучить критерии качества требований",
      "description": "- Изучить критерии качества требований",
      "criteria": "Плановый результат: освоены ключевые действия по теме и задокументированы результаты.\nОжидаемый результат: демонстрация на проекте/песочнице и наличие артефактов (доки, скриншоты, отчеты).\nПроверка корректности: ревью ментора/лида; критерии приемки пройдены без замечаний.",
      "durationWeeks": 3
    },
    {
      "category": "AQA._Алгоритм_работы_с_фичами",
      "skillName": "Диплинки",
      "level": 1,
      "goal": "Научиться покрывать диплинки на <Платформе> проекте чтобы улучшить навыки автотестирования и мокирования логики в частности",
      "description": "- Изучить имеющиеся диплинки в приложении и оценить их покрытие. При покрытии учитывать сценарии с/без авторизации если они возможны.\n- Изучить как приложение вызывает обработку диплинков\n- Использовать механику вызова диплинков в тестах. По необходимости использовать мокирование\n- Проанализировать попадание в оценку и сложности которые возникли при покрытии\n- Задокументировать результаты и опыт для передачи опыта",
      "criteria": "Плановый результат: Приобретенный навык уверенного покрытия тестами диплинков на своем фреймворке\nОжидаемый результат: задачи выполнены и зафиксированы артефактами (чек-лист/скриншоты/ссылка на PR/отчет).\nПроверка корректности: ревью ментором/лидом + воспроизводимость шагов + отсутствие разночтений по цели.",
      "durationWeeks": 12
    },
    {
      "category": "AQA._Инструменты_и_технологии",
      "skillName": "Базовые понятия",
      "level": 1,
      "goal": "Отчеты автотестирования",
      "description": "- Сформирован навык подключения отчетов на проект, успешная интеграция другой системы отчетов",
      "criteria": "Плановый результат: Получить навык работы с новыми системами отчетов или интеграций, что даст возможность уверенно начинать проекты или улучшать текущие самостоятельно\nОжидаемый результат: задачи выполнены и зафиксированы артефактами (чек-лист/скриншоты/ссылка на PR/отчет).\nПроверка корректности: ревью ментором/лидом + воспроизводимость шагов + отсутствие разночтений по цели.",
      "durationWeeks": 4
    },
    {
      "category": "AQA._Инструменты_и_технологии",
      "skillName": "XCUITest",
      "level": 1,
      "goal": "Улучшить понимание ЖЦ iOS приложений и научиться работать с разными видами ожиданий для написания эффективных и флакоустойчивых тестов",
      "description": "- Изучить Жизненный цикл iOS приложения - <https://wiki.surfstudio.ru/pages/viewpage.action?pageId=5482889> **Задание:\n- Работа с жизненным циклом приложения во время прогона тестов открыть при старте приложения Safari добавить launch argument и environment сбросить любой пирмишен перед стартом приложения использовать все методы жизненного цикла(setUp, tearDown и.т.д)\n- Использование задержек * написать явную задержку * написать неявную задержку используя: + XCTNSPredicateExpectation + XCTWaiter",
      "criteria": "Плановый результат: Успешное выполнение задания и подтверждение теории ментором\nОжидаемый результат: задачи выполнены и зафиксированы артефактами (чек-лист/скриншоты/ссылка на PR/отчет).\nПроверка корректности: ревью ментором/лидом + воспроизводимость шагов + отсутствие разночтений по цели.",
      "durationWeeks": 8
    },
    {
      "category": "AQA._Инструменты_и_технологии",
      "skillName": "Клиент-серверные моки",
      "level": 2,
      "goal": "Улучшить навык мокирования чтобы иметь возможность покрывать большее количество тестов",
      "description": "- Проанализировать смоук/санити фич, которые уже покрыты, на предмет сценариев связанных с ошибками и выбрать один сценарий. Если таких сценариев нет - выбрать в приложении самый простой.\n- Используя параметры MockVariant покрыть ошибку и проверить что она отображается.\n- Используя freeze/unfreeze функциональность проверить наличие лоадера в одном из реализованных сценариев. Учесть что лоадер должен длиться столько, сколько ждем запрос, поэтому проверить что лоадер есть не менее 2 секунд, а потом проверить что контент загрузился корректно после unfreeze.",
      "criteria": "Плановый результат: Работающий тест с моком ошибки и лоадера\nОжидаемый результат: задачи выполнены и зафиксированы артефактами (чек-лист/скриншоты/ссылка на PR/отчет).\nПроверка корректности: ревью ментором/лидом + воспроизводимость шагов + отсутствие разночтений по цели.",
      "durationWeeks": 4
    },
    {
      "category": "AQA._Инструменты_и_технологии",
      "skillName": "Отчеты и интеграция с TMS",
      "level": 2,
      "goal": "Улучшить навык определения причин ошибок по логам тестов",
      "description": "- Фиксировать наблюдения, информацию и результаты применения в письменном виде. Проанализировать минимум 10 падений тестов или других ошибок содержащих логи. На что обращать внимание при анализе логов:\n- Паттерны - повторяющиеся логи и их причины. Фиксировать своё понимание о том, что эти логи значат и почему\n- Корреляции между разными логами, например ошибка в логе теста может быть более подробно описана или вызвана ошибкой в логах аппиума.\n- Время событий и/или их последовательность. Т.к. логи зачастую отражают последовательность событий, по логам можно восстановить порядок этих событий и проанализировать корректный ли он.\n- Поиск ключевых событий. Например, при падении “не найден элемент” имеет смысл найти этот элемент в логах и посмотреть выше него что привело к тому что он не был найден.\n- Стектрейсы - если лог содержит последовательность вызовов, важно локализовать точку в коде где произошла проблема. Важно использовать вместе с пунктом про последовательность событий чтобы определить источник ошибки.\n- Создание гипотез о причинах. Цель любого анализа логов - гипотеза и потом решение которое поможет подтвердить или опровергнуть гипотезу посредством теста. Важно формировать гипотезы на всех предыдущих данных.",
      "criteria": "Плановый результат: Уверенный анализ логов, уменьшение времязатрат на анализ логов на 10%\nОжидаемый результат: задачи выполнены и зафиксированы артефактами (чек-лист/скриншоты/ссылка на PR/отчет).\nПроверка корректности: ревью ментором/лидом + воспроизводимость шагов + отсутствие разночтений по цели.",
      "durationWeeks": 12
    },
    {
      "category": "AQA._Лидерские_навыки",
      "skillName": "Работа по процессам студии",
      "level": 2,
      "goal": "Улучшить навык анализа и улучшения процессов",
      "description": "- Проект = AQA часть проекта\n- Проанализировать распределение активностей на проекте, проанализировать на наличие возможных проблем (можно запросить помощь у Маши, есть таблица чтобы легче было смотреть такое распределение)\n- Проанализировать известные на текущий момент проблемы на проекте (например артефакты с описанием проблем при покрытии фич)\n- При возможности, запланировать и провести ретро AQA (а так же определить и зафиксировать процесс регулярного ретро, синкануться с QA по поводу их ретро итд)\n- По итогам анализа и ретро запланировать действия по их улучшению, регулярно обновлять статус с помощью, например, синков.\n- По итогам активностей фиксировать улучшения процессов или же наоборот ошибки (не все гипотезы успешные, это нормально). Делать выводы и распространять опыт, в идеале какие то итоги вынести на общее собрание.",
      "criteria": "Плановый результат: Не менее двух улучшений процессов, улучшения должны быть измеримы\nОжидаемый результат: задачи выполнены и зафиксированы артефактами (чек-лист/скриншоты/ссылка на PR/отчет).\nПроверка корректности: ревью ментором/лидом + воспроизводимость шагов + отсутствие разночтений по цели.",
      "durationWeeks": 4
    },
    {
      "category": "AQA._Технические_навыки",
      "skillName": "Владение IDE",
      "level": 2,
      "goal": "Улучшить навыки владения инструментами разработки и написания кода чтобы писать и отлаживать код более эффективно.",
      "description": "- Фиксировать применение инструментов на проекте и свои наблюдения\n- Использовать <https://plugins.jetbrains.com/plugin/8554-ide-features-trainer> для изучения базовых функций IDE\n- Изучить продвинутые опции IDE:\n- Rename для изменения названия различных сущностей\n- Function для выноса переиспользуемого кода в функцию\n- Change Signature для изменения порядка или типа параметров в функции\n- Поиск через Shift-Shift по разным вкладкам (All/File/Class)\n- Текстовый поиск через Find All (CMD+Shift+F)\n- Find Tool Window (закрепление результатов поиска в окне) при CMD+клик или поиске. Навигация кнопками-стрелками\n- Импорт через option+enter\n- Окружение кода скобками - выделить код и напечатать скобки чтобы не печатать скобки дважды вручную\n- Использовать плагин <https://plugins.jetbrains.com/plugin/9792-key-promoter-x> и анализировать часто используемые действия. Топ-5 самых частых действий использовать в виде комбинаций клавиш которые настроены по умолчанию, или же настроить их если они не настроены\n- Изучить продвинутое использование debug инструментов:\n- Использовать breakpoint для обнаружения последовательности вызовов - stacktrace - и использовать навигацию чтобы переключаться между скоупами.\n- Изучить условные breakpoint’ы чтобы останавливать выполнение только в конкретных ситуациях. Сюда входит как явное условие из кода, так и зависимость от другого breakpoint’а.\n- Изучить evaluate expression инструмент отладки, позволяющий выполнить выражение в месте где остановилось выполнение кода.\n- Использовать Live Templates для шаблонного кода, например для функции шагов или задания мока, фиксировать удобные шаблоны",
      "criteria": "Плановый результат: Регулярное использование полученных знаний в работе, проверка знаний ментором\nОжидаемый результат: задачи выполнены и зафиксированы артефактами (чек-лист/скриншоты/ссылка на PR/отчет).\nПроверка корректности: ревью ментором/лидом + воспроизводимость шагов + отсутствие разночтений по цели.",
      "durationWeeks": 4
    },
    {
      "category": "AQA._Технические_навыки",
      "skillName": "Внедрение новых технологий",
      "level": 2,
      "goal": "Изучение ИИ для автоматизации",
      "criteria": "Плановый результат: Регулярное использование инструментов Copilot и ChatGPT в работе на протяжении всего ИПР и далее\nОжидаемый результат: задачи выполнены и зафиксированы артефактами (чек-лист/скриншоты/ссылка на PR/отчет).\nПроверка корректности: ревью ментором/лидом + воспроизводимость шагов + отсутствие разночтений по цели.",
      "durationWeeks": 2
    },
    {
      "category": "AQA._Технические_навыки",
      "skillName": "Качество кода",
      "level": 2,
      "goal": "Изучение базовых принципов - фундамент для написания более качественного кода",
      "description": "- Изучить базовые определения принципов SOLID и KISS\n- Более детально изучить каждый пункт принципов, тут можно искать видео или примеры. Задокументировать интересные наблюдения\n- Задокументировать потенциальные изменения в написании кода основанные на этих принципах",
      "criteria": "Плановый результат: Изучены принципы SOLID и KISS\nОжидаемый результат: задачи выполнены и зафиксированы артефактами (чек-лист/скриншоты/ссылка на PR/отчет).\nПроверка корректности: ревью ментором/лидом + воспроизводимость шагов + отсутствие разночтений по цели.",
      "durationWeeks": 4
    },
    {
      "category": "AQA._Технические_навыки",
      "skillName": "Написание документации",
      "level": 2,
      "goal": "Получить навыки написания документации проекта, а так же сохранить знания по текущему проекту",
      "description": "- Запланировать и по возможности согласовать активность на проекте\n- Определить ключевые темы - для примера можно использовать шаблоны документации по Appium или Android/iOS тестам\n- Не забыть процессную документацию, которая описывает взаимодействия между ролями и процесс работы с различными инструментами вроде Jira, а так же новые процессы если они были внедрены\n- Написать документацию и передать на ревью ментору",
      "criteria": "Плановый результат: Документация на проекте, сохраненный шаблон документации, ревью ментора\nОжидаемый результат: задачи выполнены и зафиксированы артефактами (чек-лист/скриншоты/ссылка на PR/отчет).\nПроверка корректности: ревью ментором/лидом + воспроизводимость шагов + отсутствие разночтений по цели.",
      "durationWeeks": 8
    },
    {
      "category": "AQA._Технические_навыки",
      "skillName": "Оценка задач",
      "level": 2,
      "goal": "Получить навыки оценки автотестов для ведения или старта новых проектов",
      "description": "- Согласовать с лидом проекта оценку 5-10 фич/подфич проекта\n- Склонировать шаблон оценки\n- Перенести в него текущую информацию с листа “Анализа МП” таблицы своего проекта\n- На листе “Анализе МП” оценить новые фичи\n- На листе “Оценка” корректно заполнить данные\n- Перенести результаты в план\n- Отправить результат на ревью ментору",
      "criteria": "Плановый результат: Ревью результата ментором\nОжидаемый результат: задачи выполнены и зафиксированы артефактами (чек-лист/скриншоты/ссылка на PR/отчет).\nПроверка корректности: ревью ментором/лидом + воспроизводимость шагов + отсутствие разночтений по цели.",
      "durationWeeks": 12
    },
    {
      "category": "AQA._Технические_навыки",
      "skillName": "Базовые понятия",
      "level": 1,
      "goal": "Реализовать оценку автоматизации",
      "description": "- При старте нового проекта оценить и запланировать работы\n- Склонировать шаблон оценки\n- На листе “Анализе МП” оценить фичи приложения\n- На листе “Оценка” корректно заполнить данные\n- Сделать из оценки план в удобном формате\n- Отправить результат на ревью ментору",
      "criteria": "Плановый результат: освоены ключевые действия по теме и задокументированы результаты.\nОжидаемый результат: демонстрация на проекте/песочнице и наличие артефактов (доки, скриншоты, отчеты).\nПроверка корректности: ревью ментора/лида; критерии приемки пройдены без замечаний.",
      "durationWeeks": 4
    },
    {
      "category": "AQA._Технические_навыки",
      "skillName": "Владение IDE",
      "level": 1,
      "goal": "Достичь уверенного владения IDE",
      "description": "- Фиксировать изучение и использование практик для анализа\n- Изучение и практика использования хоткеев\n- Составить список хоткеев: Исследовать и составить список хоткеев, которые максимально повышают эффективность работы. Это могут быть комбинации клавиш для быстрого переключения между файлами, запуска и остановки сборки, навигации по символам и т.д.\n- Ежедневная практика: На протяжении ИПР каждую неделю выбирать 1-2 новых хоткея для практики. Цель – внедрить эти комбинации в ежедневную рабочую рутину.\n- Создать чит-лист хоткеев: Разработать чит-лист с самыми полезными хоткеями для быстрого доступа и напоминания. Для удобства его можно распечатать.\n- Продвинутое использование дебаггера\n- Изучить условные breakpoint'ы: Научиться создавать и использовать условные breakpoint'ы для отладки кода, который выполняется в определенных условиях или при определенных значениях переменных. Так же изучить Swift Error Breakpoints, чтобы останавливать код на ошибках сразу.\n- Работа с watchpoints: Изучить и применить watchpoints для мониторинга изменений определенных переменных во время выполнения программы.\n- LLDB команды: Изучить основные LLDB команды для анализа и управления выполнением программы в режиме отладки. Во время отладки кода применять.\n- Изучение рефакторинга\n- Изучить Rename рефакторинг чтобы можно было удобно менять название объектов во всех местах где они используются\n- Изучить Edit All in Scope для переименовывания в одном файле\n- Изучить использование множественных курсоров - Shift+Option+Click / option + drag\n- Extract to Method/Function для выноса переиспользуемого когда в функции\n- Extract Variables или Extract All Occurrences для выноса выражений в переменную\n- Изучить <https://github.com/theswiftdev/awesome-xcode-extensions> на предмет полезных расширений в работе, задокументировать их использование в чате и внедрить в практику",
      "criteria": "Плановый результат: освоены ключевые действия по теме и задокументированы результаты.\nОжидаемый результат: демонстрация на проекте/песочнице и наличие артефактов (доки, скриншоты, отчеты).\nПроверка корректности: ревью ментора/лида; критерии приемки пройдены без замечаний.",
      "durationWeeks": 4
    },
    {
      "category": "Виды_тестирования",
      "skillName": "Конфигурационное тестирование",
      "level": 1,
      "goal": "Базовые понятия конфигурационного тестирования",
      "description": "- Изучить понятие конфигурационного тестирования и как его проводят на мобильных устройствах\n- Изучить уровни проведения конфигурационного тестирования",
      "criteria": "Плановый результат: освоены ключевые действия по теме и задокументированы результаты.\nОжидаемый результат: демонстрация на проекте/песочнице и наличие артефактов (доки, скриншоты, отчеты).\nПроверка корректности: ревью ментора/лида; критерии приемки пройдены без замечаний.",
      "durationWeeks": 3
    },
    {
      "category": "Виды_тестирования",
      "skillName": "Регрессионное тестирование",
      "level": 1,
      "goal": "Повторить теорию регрессионного тестирования для более осознаного применения на проекте",
      "description": "- Повторить теорию регрессионного тестирования - виды итоговых прогонов, цели, когда и зачем проводятся <https://wiki.surfstudio.ru/pages/viewpage.action?pageId=2396274>  + вложенные страницы\n- Собрать и провести регресс на проекте, убедиться что процесс соответствует, описанному в статье\n- Объяснить причину выбора именно регресса, а не другого вида итогового прогона",
      "criteria": "Плановый результат: освоены ключевые действия по теме и задокументированы результаты.\nОжидаемый результат: демонстрация на проекте/песочнице и наличие артефактов (доки, скриншоты, отчеты).\nПроверка корректности: ревью ментора/лида; критерии приемки пройдены без замечаний.",
      "durationWeeks": 3
    },
    {
      "category": "Виды_тестирования",
      "skillName": "Тестирование безопасности",
      "level": 1,
      "goal": "Изучить основные подходы к тестированию безопасности",
      "description": "- Изучить и выписать принципы безопасности ПО\n- Изучить и выписать виды уязвимостей",
      "criteria": "Плановый результат: 1. Изучены и выписаны принципы безопасности ПО 2. Изучены и выписаны виды уязвимостей\nОжидаемый результат: задачи выполнены и зафиксированы артефактами (чек-лист/скриншоты/ссылка на PR/отчет).\nПроверка корректности: ревью ментором/лидом + воспроизводимость шагов + отсутствие разночтений по цели.",
      "durationWeeks": 3
    },
    {
      "category": "Виды_тестирования",
      "skillName": "Тестирование производительности",
      "level": 1,
      "goal": "Базовые подходы к тестированию производительности",
      "description": "- Изучить виды тестирования производительности (нагрузка, стресс, объемное, стабильности)\n- Выписать особенности разных типов тестирования и разницу между ними\n- Изучить когда и зачем производится тестирование производительности",
      "criteria": "Плановый результат: освоены ключевые действия по теме и задокументированы результаты.\nОжидаемый результат: демонстрация на проекте/песочнице и наличие артефактов (доки, скриншоты, отчеты).\nПроверка корректности: ревью ментора/лида; критерии приемки пройдены без замечаний.",
      "durationWeeks": 3
    },
    {
      "category": "Виды_тестирования",
      "skillName": "Тестирование юзабилити",
      "level": 1,
      "goal": "Базовые понятия тестирования удобства использования",
      "description": "- Изучить аспекты тестирования удобства использования\n- Изучить уровни проведения тестирования удобства использования",
      "criteria": "Плановый результат: освоены ключевые действия по теме и задокументированы результаты.\nОжидаемый результат: демонстрация на проекте/песочнице и наличие артефактов (доки, скриншоты, отчеты).\nПроверка корректности: ревью ментора/лида; критерии приемки пройдены без замечаний.",
      "durationWeeks": 3
    },
    {
      "category": "Дизайн",
      "skillName": "HIG",
      "level": 2,
      "goal": "Изучить актуальную информацию по особенностям гайдлайнов дизайна iOS чтобы улучшить тестирование верстки",
      "description": "- Изучить актуальную версию гайдлайнов [https://developer.apple.com/design/human-interface-guidelines](https://developer.apple.com/design/human-interface-guidelines.%D0%9E%D1%81%D0%BE%D0%B1%D0%BE%D0%B\n- . Особое внимание стоит уделять гайдлайнам по UI/UX, особенностям элементов, их названию, их назначению, а так же нюансам их использования (что стоит делать, а что нет)\n- Проанализировать студийный чеклист тестирования верстки и сформулировать потенциальные улучшения в нем в отдельном документе с аргументацией",
      "criteria": "Плановый результат: Изучены актуальные особенности и зафиксированы в виде личной документации или чеклиста\nОжидаемый результат: задачи выполнены и зафиксированы артефактами (чек-лист/скриншоты/ссылка на PR/отчет).\nПроверка корректности: ревью ментором/лидом + воспроизводимость шагов + отсутствие разночтений по цели.",
      "durationWeeks": 4
    },
    {
      "category": "Дизайн",
      "skillName": "Material Design",
      "level": 2,
      "goal": "Изучить актуальную информацию по особенностям гайдлайнов дизайна Android чтобы улучшить тестирование верстки",
      "description": "- Изучить актуальную версию гайдлайнов <https://m\n- material.io>. Особое внимание стоит уделять гайдлайнам по UI/UX, особенностям элементов, их названию, их назначению, а так же нюансам их использования (что стоит делать, а что нет)\n- Проанализировать студийный чеклист тестирования верстки и сформулировать потенциальные улучшения в нем в отдельном документе с аргументацией",
      "criteria": "Плановый результат: Изучены актуальные особенности и зафиксированы в виде личной документации или чеклиста\nОжидаемый результат: задачи выполнены и зафиксированы артефактами (чек-лист/скриншоты/ссылка на PR/отчет).\nПроверка корректности: ревью ментором/лидом + воспроизводимость шагов + отсутствие разночтений по цели.",
      "durationWeeks": 4
    },
    {
      "category": "Инструменты_и_технологии",
      "skillName": "Git",
      "level": 1,
      "goal": "Git: 1. Просмотреть курс по работе с git <https://smartiqa.ru/courses/git>",
      "description": "- Просмотреть курс по работе с git <https://smartiqa.ru/courses/git>",
      "criteria": "Плановый результат: освоены ключевые действия по теме и задокументированы результаты.\nОжидаемый результат: демонстрация на проекте/песочнице и наличие артефактов (доки, скриншоты, отчеты).\nПроверка корректности: ревью ментора/лида; критерии приемки пройдены без замечаний.",
      "durationWeeks": 2
    },
    {
      "category": "Клиент-серверное_взаимодействие",
      "skillName": "Клиент-серверные технологии",
      "level": 2,
      "goal": "Научиться просматривать трафик приложений, которые используют GraphQL",
      "description": "- Поработать с приложением, которое использует GraphQL\n- Повторить понятие GraphQL\n- Подменить ответы запросов с помощью Charles для приложения Ригла\n- Установить Apollo Прочитать статью по работе с Apollo <https://wiki.surfstudio.ru/display/QA/Apollo> Попробовать поработать с инструментом, используя тестовые методы от Apollo",
      "criteria": "Плановый результат: освоены ключевые действия по теме и задокументированы результаты.\nОжидаемый результат: демонстрация на проекте/песочнице и наличие артефактов (доки, скриншоты, отчеты).\nПроверка корректности: ревью ментора/лида; критерии приемки пройдены без замечаний.",
      "durationWeeks": 4
    },
    {
      "category": "Клиент-серверное_взаимодействие",
      "skillName": "Proxyman",
      "level": 1,
      "goal": "Proxyman: 1. Установить Proxyman 2. Попробовать поработать с инструментом на проекте",
      "description": "- Установить Proxyman\n- Попробовать поработать с инструментом на проекте",
      "criteria": "Плановый результат: освоены ключевые действия по теме и задокументированы результаты.\nОжидаемый результат: демонстрация на проекте/песочнице и наличие артефактов (доки, скриншоты, отчеты).\nПроверка корректности: ревью ментора/лида; критерии приемки пройдены без замечаний.",
      "durationWeeks": 2
    },
    {
      "category": "Личная_производительность",
      "skillName": "Развитие себя",
      "level": 1,
      "goal": "Научиться самостоятельно находить точки роста для себя",
      "description": "- Выписать свои слабые стороны\n- Выписать свои сильные стороны\n- Выписать мысли по поводу того, как тебя видят люди\n- Выписать моменты, которые мотивируют тебя идти дальше и/или делать дальше",
      "criteria": "Плановый результат: - Выписаны свои слабые стороны\n- Выписаны свои сильные стороны\n- Выписаны мысли по поводу того, как тебя видят люди\n- Выписаны моменты, которые мотивируют идти дальше и/или делать дальше\nОжидаемый результат: задачи выполнены и зафиксированы артефактами (чек-лист/скриншоты/ссылка на PR/отчет).\nПроверка корректности: ревью ментором/лидом + воспроизводимость шагов + отсутствие разночтений по цели.",
      "durationWeeks": 4
    },
    {
      "category": "Методологии_разработки_и_управления",
      "skillName": "Scrum",
      "level": 2,
      "goal": "Изучить теорию методологий разработки и управления - Scrum",
      "description": "- Изучить последовательность QA активностей и как они соотносятся с этапами разработки по Scrum Изучить артефакты Scrum: диаграмма сгорания задач, беклог, user story итд Изучить роли в методологии Scrum: Master, Product Owner, Development Team, Пользователи, Стейкхолдеры",
      "criteria": "Плановый результат: освоены ключевые действия по теме и задокументированы результаты.\nОжидаемый результат: демонстрация на проекте/песочнице и наличие артефактов (доки, скриншоты, отчеты).\nПроверка корректности: ревью ментора/лида; критерии приемки пройдены без замечаний.",
      "durationWeeks": 2
    },
    {
      "category": "Методологии_разработки_и_управления",
      "skillName": "V model",
      "level": 1,
      "goal": "Изучить теорию методологий разработки и управления - V model",
      "description": "- Изучить этапы жизни проекта в этой методологии <http://www.interface.ru/iarticle/files/35798_\n- pdf>  (29стр) [https://portal.tpu.ru/SHARED/i/IGSAVENKO/academic/Tab/Tab3/trpo\\_lections\\_230100\\_\n- pdf](https://portal.tpu.ru/SHARED/i/IGSAVENKO/academic/Tab/Tab3/trpo_lections_230100_\n- pdf24%20%D1%81%D1%82%D1%\n-   (24стр)\n- Изучить плюсы и минусы с точки зрения качества",
      "criteria": "Плановый результат: освоены ключевые действия по теме и задокументированы результаты.\nОжидаемый результат: демонстрация на проекте/песочнице и наличие артефактов (доки, скриншоты, отчеты).\nПроверка корректности: ревью ментора/лида; критерии приемки пройдены без замечаний.",
      "durationWeeks": 2
    },
    {
      "category": "Основы_тестирования",
      "skillName": "Уровни тестирования",
      "level": 1,
      "goal": "Уровни тестирования: 1. Изучить уровни тестирования",
      "description": "- Изучить уровни тестирования",
      "criteria": "Плановый результат: освоены ключевые действия по теме и задокументированы результаты.\nОжидаемый результат: демонстрация на проекте/песочнице и наличие артефактов (доки, скриншоты, отчеты).\nПроверка корректности: ревью ментора/лида; критерии приемки пройдены без замечаний.",
      "durationWeeks": 4
    },
    {
      "category": "Особенности_мобильного_тестирования",
      "skillName": "Жизненный цикл мобильного приложения",
      "level": 2,
      "goal": "Жизненный цикл мобильного приложения: 1. Изучить какие состояния есть у Android и iOS приложений и когда они их меняют (например когда приложение уходит в задний фон, а когда выгружается из памяти)",
      "description": "- Изучить какие состояния есть у Android и iOS приложений и когда они их меняют (например когда приложение уходит в задний фон, а когда выгружается из памяти)",
      "criteria": "Плановый результат: освоены ключевые действия по теме и задокументированы результаты.\nОжидаемый результат: демонстрация на проекте/песочнице и наличие артефактов (доки, скриншоты, отчеты).\nПроверка корректности: ревью ментора/лида; критерии приемки пройдены без замечаний.",
      "durationWeeks": 4
    },
    {
      "category": "Оценка_работ_тестирования",
      "skillName": "Методы оценки тестирования",
      "level": 1,
      "goal": "Изучить методы оценки тестирования, использовать при планировании",
      "description": "- Изучить методы оценки тестирования экспертный, дедуктивный, индуктивный\n- Оценить спринт(этап)/проект/несколько задач разными методами - 3 оценки (на разных этапах проекта)\n- Сравнить полученные оценки\n- Проанализировать попадание в оценки",
      "criteria": "Плановый результат: освоены ключевые действия по теме и задокументированы результаты.\nОжидаемый результат: демонстрация на проекте/песочнице и наличие артефактов (доки, скриншоты, отчеты).\nПроверка корректности: ревью ментора/лида; критерии приемки пройдены без замечаний.",
      "durationWeeks": 4
    },
    {
      "category": "Оценка_работ_тестирования",
      "skillName": "Сбор статистики и анализ результатов",
      "level": 1,
      "goal": "Улучшить навык попадания в оценки, научится анализировать причины непопадания в оценки, поможет при планировании",
      "description": "- Оценить спринт (этап)/проект/несколько задач - 3 оценки (на разных этапах работы над проектом)\n- Сравнить первоначальные оценки с фактическими\n- Проанализировать результат, сделать выводы",
      "criteria": "Плановый результат: освоены ключевые действия по теме и задокументированы результаты.\nОжидаемый результат: демонстрация на проекте/песочнице и наличие артефактов (доки, скриншоты, отчеты).\nПроверка корректности: ревью ментора/лида; критерии приемки пройдены без замечаний.",
      "durationWeeks": 4
    },
    {
      "category": "Планирование_тестирования",
      "skillName": "Базовые понятия",
      "level": 1,
      "goal": "Базовые понятия: Прочитаны и обсуждены понятия зависимостей, различия между указанными ролями",
      "description": "- Прочитаны и обсуждены понятия зависимостей, различия между указанными ролями",
      "criteria": "Плановый результат: освоены ключевые действия по теме и задокументированы результаты.\nОжидаемый результат: демонстрация на проекте/песочнице и наличие артефактов (доки, скриншоты, отчеты).\nПроверка корректности: ревью ментора/лида; критерии приемки пройдены без замечаний.",
      "durationWeeks": 4
    },
    {
      "category": "Планирование_тестирования",
      "skillName": "Отчет по итогам тестирования",
      "level": 1,
      "goal": "Отчет по итогам тестирования: Цель изучения содержания отчета по тестированию заключается в освоении навыков составления и представления информации о выполненных тестах, их результатов и общего обзора качества системы или продукта.",
      "description": "- Изучить, что представляет из себя отчет по тестированию и для чего он нужен - Изучить элементы и параметры, какие должны быть отражены в отчете по тестированию [Отчеты о тестировании](/pages/viewpage.action?pageId=",
      "criteria": "Плановый результат: - Изучено, что представляет из себя отчет по тестированию и для чего он нужен\n- Изучены элементы и параметры, какие должны быть отражены в отчете по тестированию\nОжидаемый результат: задачи выполнены и зафиксированы артефактами (чек-лист/скриншоты/ссылка на PR/отчет).\nПроверка корректности: ревью ментором/лидом + воспроизводимость шагов + отсутствие разночтений по цели.",
      "durationWeeks": 4
    },
    {
      "category": "Планирование_тестирования",
      "skillName": "Разработка плана тестирования",
      "level": 1,
      "goal": "Разработка плана тестирования: Прочитаны и обсуждены понятия зависимостей, различия между указанными ролями",
      "description": "- Прочитаны и обсуждены понятия зависимостей, различия между указанными ролями. <https://www.wrike.com/ru/blog/rol-zavisimostej-v-upravlenii-proektami/>  - различие между ролями управляемыми количеством работы и ролями управляемыми зависимостями - описать примеры ролей управляемые количеством работы и управляемые зависимостями",
      "criteria": "Плановый результат: освоены ключевые действия по теме и задокументированы результаты.\nОжидаемый результат: демонстрация на проекте/песочнице и наличие артефактов (доки, скриншоты, отчеты).\nПроверка корректности: ревью ментора/лида; критерии приемки пройдены без замечаний.",
      "durationWeeks": 4
    },
    {
      "category": "Планирование_тестирования",
      "skillName": "Разработка плана тестирования",
      "level": 2,
      "goal": "Улучшить навык планирования, понимания приоритетов и целей",
      "description": "- Планировать тестирование на проекте\n- Распределять задачи между qa относительно плана разработки\n- Изменять процесс тестирования на проекте под изменения скоупа\n- Уведомлять заинтересованных лиц",
      "criteria": "Плановый результат: освоены ключевые действия по теме и задокументированы результаты.\nОжидаемый результат: демонстрация на проекте/песочнице и наличие артефактов (доки, скриншоты, отчеты).\nПроверка корректности: ревью ментора/лида; критерии приемки пройдены без замечаний.",
      "durationWeeks": 4
    },
    {
      "category": "Планирование_тестирования",
      "skillName": "Разрешение конфликтов и зависимостей",
      "level": 1,
      "goal": "Изучить понятие зависимость в управлении проектом",
      "description": "- Изучить понятие зависимость в управлении проектом\n- виды зависимостей (FS, SS, FF, SF)",
      "criteria": "Плановый результат: освоены ключевые действия по теме и задокументированы результаты.\nОжидаемый результат: демонстрация на проекте/песочнице и наличие артефактов (доки, скриншоты, отчеты).\nПроверка корректности: ревью ментора/лида; критерии приемки пройдены без замечаний.",
      "durationWeeks": 4
    },
    {
      "category": "Подходы_управления_тестированием",
      "skillName": "Аналитические подходы",
      "level": 1,
      "goal": "Изучить, что такое Root Cause Analysis",
      "description": "- Изучить, что такое Root Cause Analysis",
      "criteria": "Плановый результат: освоены ключевые действия по теме и задокументированы результаты.\nОжидаемый результат: демонстрация на проекте/песочнице и наличие артефактов (доки, скриншоты, отчеты).\nПроверка корректности: ревью ментора/лида; критерии приемки пройдены без замечаний.",
      "durationWeeks": 4
    },
    {
      "category": "Подходы_управления_тестированием",
      "skillName": "Тестирование на основе рисков",
      "level": 1,
      "goal": "Изучить теорию тестирование на основе рисков для дальнейшего использования на проектах",
      "description": "- Прочитать про подход\n- Тестирование на основе рисков\n- виды рисков\n- успех проекта и успех продукта\n- цель тестирования, основанного на рисках - подходы к такому виду тестирования",
      "criteria": "Плановый результат: освоены ключевые действия по теме и задокументированы результаты.\nОжидаемый результат: демонстрация на проекте/песочнице и наличие артефактов (доки, скриншоты, отчеты).\nПроверка корректности: ревью ментора/лида; критерии приемки пройдены без замечаний.",
      "durationWeeks": 4
    },
    {
      "category": "Процесс_тестирования",
      "skillName": "Приемочное тестирование",
      "level": 1,
      "goal": "Повторить базовые понятия приемочного тестирования",
      "description": "- Повторить, что такое Alpha/Beta тестирование\n- Повторить, что такое UAT\n- Повторить для чего нужно приемочное тестирование\n- Изучить, что такое A/B тестирование",
      "criteria": "Плановый результат: освоены ключевые действия по теме и задокументированы результаты.\nОжидаемый результат: демонстрация на проекте/песочнице и наличие артефактов (доки, скриншоты, отчеты).\nПроверка корректности: ревью ментора/лида; критерии приемки пройдены без замечаний.",
      "durationWeeks": 4
    },
    {
      "category": "Работа_с_мобильными_устройствами",
      "skillName": "Firebase",
      "level": 2,
      "goal": "Улучшение навыка использования Firebase для тестирования на проекте",
      "description": "- Освежить знания [Firebase](/display/QA/Firebase)\n- Создать группу для QA для шаринга (можно добавить только qadept)\n- На актуальном студийном проекте проверить аналитику через DebugView. Желательно брать свой проект чтобы не много времени тратить на сборку приложения.\n- На актуальном студийном проекте где есть Performance монитор изучить какие самые типовые ошибки запросов случаются у пользователей и какая динамика по скорости запуска приложения\n- Поразмышлять о 3-5 ситуациях когда может пригодиться Remote Config",
      "criteria": "Плановый результат: Успешное выполнение заданий с приложенными артефактами (текст / скриншоты)\nОжидаемый результат: задачи выполнены и зафиксированы артефактами (чек-лист/скриншоты/ссылка на PR/отчет).\nПроверка корректности: ревью ментором/лидом + воспроизводимость шагов + отсутствие разночтений по цели.",
      "durationWeeks": 2
    },
    {
      "category": "Работа_с_мобильными_устройствами",
      "skillName": "Особенности мобильного тестирования",
      "level": 2,
      "goal": "Дебаг экран: 1. Освежить знания о дебаг экранах [Debug-screen](/display/QA/Debug-screen) 2. Изучить <https://habr.com/ru/companies/atisu/articles/598389/> статью про Дебаг экран в Flutter. Разобраться чем отличается Flutter от Native 3. Выписать не менее 5 полезных применений в тестировании для дебаг экрана Утечки памяти: 1. Изучить <https://habr.com/ru/companies/ozontech/articles/815041/> статью про тестирование утечек памяти. По необходимости искать дополнительную инфу по конкретным инструментам 2. На примере проекта студии попробовать использовать LeakCanary и найти утечку (если за полчаса не найдется то попробовать другое приложение). 3. Проанализировать утечку и выделить артефакты для баг-репорта. По необходимости передать баг репорт QA 4. Похожим образом пройтись по iOS и Flutter приложениям с помощью профилировщика памяти для ознакомления с инструментами. Геолокация: 1. Освежить знания [Подмена геолокации](/pages/viewpage.action?pageId=2396518) 2. Последовательно подменить и проверить успех на Андроиде (девайс и эмулятор) и iOS симуляторе Тестирование верстки: 1. Изучить [Window Visual Quality Assurance](/display/QA/Window+Visual+Quality+Assurance) и установить на Android данный инструмент 2. В нативном приложении Android проверить возможность измерять отступы между элементами 3. Для Flutter приложений собрать сборку студийного приложения и через инспектор проверить отступы",
      "description": "- Дебаг экран:\n- Освежить знания о дебаг экранах [Debug-screen](/display/QA/Debug-screen)\n- Изучить <https://habr.com/ru/companies/atisu/articles/598389/> статью про Дебаг экран в Flutter. Разобраться чем отличается Flutter от Native\n- Выписать не менее 5 полезных применений в тестировании для дебаг экрана Утечки памяти:\n- Изучить <https://habr.com/ru/companies/ozontech/articles/815041/> статью про тестирование утечек памяти. По необходимости искать дополнительную инфу по конкретным инструментам\n- На примере проекта студии попробовать использовать LeakCanary и найти утечку (если за полчаса не найдется то попробовать другое приложение).\n- Проанализировать утечку и выделить артефакты для баг-репорта. По необходимости передать баг репорт QA\n- Похожим образом пройтись по iOS и Flutter приложениям с помощью профилировщика памяти для ознакомления с инструментами. Геолокация:\n- Освежить знания [Подмена геолокации](/pages/viewpage.action?pageId=\n- Последовательно подменить и проверить успех на Андроиде (девайс и эмулятор) и iOS симуляторе Тестирование верстки:\n- Изучить [Window Visual Quality Assurance](/display/QA/Window+Visual+Quality+Assurance) и установить на Android данный инструмент\n- В нативном приложении Android проверить возможность измерять отступы между элементами\n- Для Flutter приложений собрать сборку студийного приложения и через инспектор проверить отступы",
      "criteria": "Плановый результат: Применяю знания - Понимаю отличия Debug-screen на разных платформах и особенности их реализации - Аргументирую необходимость Debug-screen на проекте или его доработок (например, сделать чтобы прокси запоминался на Flutter для тестирования запросов на старте приложения) - Тестирую утечки памяти - Тестирую геолокацию с помощью подмены на всех платформах (и на симуляторах) - Тестирую верстку приложений с помощью различных инструментов\nОжидаемый результат: задачи выполнены и зафиксированы артефактами (чек-лист/скриншоты/ссылка на PR/отчет).\nПроверка корректности: ревью ментором/лидом + воспроизводимость шагов + отсутствие разночтений по цели.",
      "durationWeeks": 4
    },
    {
      "category": "Работа_с_мобильными_устройствами",
      "skillName": "Особенности мобильного тестирования",
      "level": 2,
      "goal": "Углубленное изучение Дебаг экрана",
      "description": "- Дебаг экран:\n- Освежить знания о дебаг экранах [Debug-screen](/display/QA/Debug-screen)\n- Изучить <https://habr.com/ru/companies/atisu/articles/598389/> статью про Дебаг экран в Flutter. Разобраться чем отличается Flutter от Native\n- Выписать не менее 5 полезных применений в тестировании для дебаг экрана Утечки памяти:\n- Изучить <https://habr.com/ru/companies/ozontech/articles/815041/> статью про тестирование утечек памяти. По необходимости искать дополнительную инфу по конкретным инструментам\n- На примере проекта студии попробовать использовать LeakCanary и найти утечку (если за полчаса не найдется то попробовать другое приложение).\n- Проанализировать утечку и выделить артефакты для баг-репорта. По необходимости передать баг репорт QA\n- Похожим образом пройтись по iOS и Flutter приложениям с помощью профилировщика памяти для ознакомления с инструментами. Геолокация:\n- Освежить знания [Подмена геолокации](/pages/viewpage.action?pageId=\n- Последовательно подменить и проверить успех на Андроиде (девайс и эмулятор) и iOS симуляторе Тестирование верстки:\n- Изучить [Window Visual Quality Assurance](/display/QA/Window+Visual+Quality+Assurance) и установить на Android данный инструмент\n- В нативном приложении Android проверить возможность измерять отступы между элементами\n- Для Flutter приложений собрать сборку студийного приложения и через инспектор проверить отступы",
      "criteria": "Плановый результат: Применяю знания - Понимаю отличия Debug-screen на разных платформах и особенности их реализации - Аргументирую необходимость Debug-screen на проекте или его доработок (например, сделать чтобы прокси запоминался на Flutter для тестирования запросов на старте приложения) - Тестирую утечки памяти - Тестирую геолокацию с помощью подмены на всех платформах (и на симуляторах) - Тестирую верстку приложений с помощью различных инструментов\nОжидаемый результат: задачи выполнены и зафиксированы артефактами (чек-лист/скриншоты/ссылка на PR/отчет).\nПроверка корректности: ревью ментором/лидом + воспроизводимость шагов + отсутствие разночтений по цели.",
      "durationWeeks": 4
    },
    {
      "category": "Работа_с_сотрудниками",
      "skillName": "Проведение личных встреч и 1-1",
      "level": 1,
      "goal": "Получить опыт проведения 1-1 встреч путем выстраивания взаимоотношений и оценке каждого сотрудника внутри qa команды проекта.",
      "description": "- 1 Изучить статью и доп материалы - [People Management - One-on-one](/display/WIKI/People+Management+-+One-on-one) 2 Подготовиться и провести 2 встречи 1-1 с сотрудниками своей команды используя знания из статьи 3 По итогам встреч сделать выводы и выписать основные моменты по сотрудникам: - основная мотивация сотрудника - проблемы и боли сотрудника - отношение к проекту сотрудника - сильные и слабые стороны сотрудника 4 Подумать и выписать какие задачи проекта будут эффективней выполняться тем или иным сотрудником и почему.",
      "criteria": "Плановый результат: - Проведены минимум 2 встречи с сотрудниками из своей команды - Выписаны результаты встреч по критериям - Сделаны выводы о том как эффективно использовать полученные знания о сотрудниках при управлении командой\nОжидаемый результат: задачи выполнены и зафиксированы артефактами (чек-лист/скриншоты/ссылка на PR/отчет).\nПроверка корректности: ревью ментором/лидом + воспроизводимость шагов + отсутствие разночтений по цели.",
      "durationWeeks": 8
    },
    {
      "category": "Работа_со_сборками",
      "skillName": "Сборка Android, Сборка iOS, Сборка Flutter",
      "level": 1,
      "goal": "Изучить процесс сборки приложений",
      "description": "- Изучить процесс сборки более подробно чтобы иметь возможность самостоятельно разбираться с проблемами сборок и лучше адаптироваться к изменениям процесса сборки",
      "criteria": "Плановый результат: освоены ключевые действия по теме и задокументированы результаты.\nОжидаемый результат: демонстрация на проекте/песочнице и наличие артефактов (доки, скриншоты, отчеты).\nПроверка корректности: ревью ментора/лида; критерии приемки пройдены без замечаний.",
      "durationWeeks": 4
    },
    {
      "category": "Работа_со_сборками",
      "skillName": "Сборка Flutter",
      "level": 2,
      "goal": "Повторить самостоятельную сборку приложений, изучить технические аспекты",
      "description": "- Собрать приложение Ригла на андроид/ios\n- Скачать репозиторий flutter, понять как влияет изменение версии flutter при сборке приложений",
      "criteria": "Плановый результат: Возможность самостоятельной сборки проектов без четкой пошаговой инструкции\nОжидаемый результат: задачи выполнены и зафиксированы артефактами (чек-лист/скриншоты/ссылка на PR/отчет).\nПроверка корректности: ревью ментором/лидом + воспроизводимость шагов + отсутствие разночтений по цели.",
      "durationWeeks": 8
    },
    {
      "category": "Управление_проектом",
      "skillName": "Jira",
      "level": 2,
      "goal": "Выгрузить задачи из Jira в разных вариантах",
      "description": "- Выгрузить задачи в разных вариантах из Jira: - в формате csv - в формате json - в формате xml, - doc generator",
      "criteria": "Плановый результат: освоены ключевые действия по теме и задокументированы результаты.\nОжидаемый результат: демонстрация на проекте/песочнице и наличие артефактов (доки, скриншоты, отчеты).\nПроверка корректности: ревью ментора/лида; критерии приемки пройдены без замечаний.",
      "durationWeeks": 3
    },
    {
      "category": "AQA._Технические_навыки",
      "skillName": "Внедрение новых технологий",
      "level": 2,
      "goal": "Изучить и внедрить в использование Copilot и ChatGPT",
      "description": "- Изучить и научиться использовать Github Copilot:\n  - Подключить Github Copilot, обратиться за доступами по необходимости. Изучить https://wiki.surfstudio.ru/pages/viewpage.action?pageId=45162875.\n  - Задокументировать как минимум 5 случаев, когда Copilot сократил время на написание кода или улучшил его качество.\n- Изучить и научиться использовать ChatGPT:\n  - Запросить доступ (по возможности GPT-4).\n  - Регулярно выделять время для использования в рабочих задачах.\n  - Фиксировать частоту использования и конкретные задачи, где он оказал значительную помощь",
      "criteria": "- Задокументированы 5 случаев, когда Copilot сократил время на написание кода или улучшил качество работы\n- Подведены итоги работы с Copilot: в каких случаях его стоит использовать, а в каких — он не нужен\n- Copilot регулярно используется в работе (регулярно — от 1 месяца)\n- Зафиксированы виды задач, которые ChatGPT отлично решает и помогает в работе\n- Подведены итоги работы с ChatGPT: в каких случаях его стоит использовать, а в каких — он не нужен\n- ChatGPT регулярно используется в работе (регулярно — от 1 месяца)",
      "durationWeeks": 4
    },
    {
      "category": "Виды_тестирования",
      "skillName": "Типы автоматизированного тестирования",
      "level": 1,
      "goal": "Изучить виды автотестов и применить подход на фиче БК",
      "description": "- Посмотреть вебинар по теме различных видов тестов: https://www.youtube.com/watch?v=Oa7JbAlXLxA\n- Выписать виды автотестов, кто их может/должен писать, привести примеры автотеста сценариями\n- Взять любую фичу с БК и разбить её по таблице выше (как должна быть покрыта с использованием данного подхода)",
      "criteria": "- Получена таблица с данными о видах автотестов, специалисте, который работает с этими видами тестов, а также примеры сценариев\n- Функциональность с проекта БК разбита на различные тесты для обеспечения наиболее эффективного покрытия (с использованием таблицы выше)\n- По необходимости таблица актуализирована\n- Опыт донесён на проект БК и на отдел",
      "durationWeeks": 4
    },
    {
      "category": "AQA._Инструменты_и_технологии",
      "skillName": "XCUITest",
      "level": 2,
      "goal": "Разобраться в особенностях CI/CD для XCUI + Allure (CLI запуск, параллельные тест‑планы, чек‑лист под обновление Xcode)",
      "description": "- Изучить команды для запуска автотестов на CI и запустить их локально на компьютере (не используя IDE)\n- Настроить локальный запуск командой с генерацией Allure-отчета\n- Локально запустить тесты параллельно в тест-планах и убедиться в корректной агрегации отчетов\n- Изучить особенности работы с CI/CD в рамках фреймворка XCUITest\n- Выписать проблемные моменты и составить чек-лист для переезда на новый Xcode",
      "criteria": "- Получен Allure-отчет запуска всех тестов через терминал\n- Получен Allure-отчет запуска всех тестов параллельно через терминал\n- Зафиксированы проблемы в случае обновления Xcode\n- Создан чек-лист для проверки CI в случае обновления Xcode (дабы избежать застоя при переезде)",
      "durationWeeks": 4
    },
    {
      "category": "AQA._Технические_навыки",
      "skillName": "Владение IDE",
      "level": 1,
      "goal": "Изучить и внедрить хоткеи Xcode (список, практика, чит‑лист)",
      "description": "- Исследовать и составить список хоткеев, которые максимально повышают эффективность работы (переключение между файлами, запуск/остановка сборки, навигация по символам и т.д.)\n- Ежедневная практика: на протяжении ИПР каждую неделю выбирать 1–2 новых хоткея для практики, внедрять в рутину\n- Создать чит‑лист хоткеев для быстрого доступа и напоминания (по возможности распечатать)",
      "criteria": "- Составлен список хоткеев, которые были изучены\n- Выделены наиболее полезные хоткеи (заметно оптимизируют работу)\n- Использование хоткеев подтверждено на протяжении месяца\n- Разработан чит‑лист с самыми полезными хоткеями и пошарен на отдел",
      "durationWeeks": 4
    },
    {
      "category": "AQA._Инструменты_и_технологии",
      "skillName": "XCUITest",
      "level": 1,
      "goal": "Жизненный цикл и ожидания в XCUITest",
      "description": "- Открыть при старте приложения Safari\n- Добавить launch argument и environment\n- Сбросить любой пермишен перед стартом приложения\n- Использовать все методы жизненного цикла (setUp, tearDown и т.д.)\n- Написать явную задержку\n- Написать неявную задержку, используя: XCTNSPredicateExpectation, XCTWaiter\n- Подумать, как именно использовать данные наработки в проекте БК",
      "criteria": "- Сделан ПР с использованием знаний, полученных в данном исследовании",
      "durationWeeks": 4
    },
    {
      "category": "AQA._Технические_навыки",
      "skillName": "Внедрение новых технологий",
      "level": 2,
      "goal": "Работа с Cursor, создание шаблонов/правил и сниппетов",
      "description": "- Настроить продуктивную среду в Cursor для iOS: модели, контекст, prompty, сниппеты для XCTest/XCUITest, готовые инструкции для автогенерации тестов\n  https://youtu.be/9N6F4mApqkU?si=zqkJbKH19WVoJN4K&t=115\n- Создать шаблоны XCTestCase/Page Object и сниппеты; автогенерировать каркас тестов по описанию сценария",
      "criteria": "- Снижение времени на рутину\n- Рост качества и воспроизводимости\n- Меньше контекст‑переключений\n- Масштабирование удачных практик\n- Настроен профиль инструментов и горячие действия\n- Подготовлены сниппеты и короткие подсказки для часто повторяющихся задач\n- Описаны правила выбора контекста и выделения нужных файлов\n- Сделана краткая инструкция с примерами (1 страница) и короткая запись экрана\n- Показан пример «от запроса до PR» на одном тесте\n- Библиотека шаблонов/сниппетов\n- Краткая инструкция по применению (например, создание каркаса для снэпшот‑теста по View)",
      "durationWeeks": 4
    },
    {
      "category": "AQA._Технические_навыки",
      "skillName": "Качество кода",
      "level": 2,
      "goal": "Качество кода и тестов в целом",
      "description": "- Включить AI pre-PR проверки для тестов: автогенерация замечаний до отправки PR, чек-лист качества.\n  Можно воспользоваться cursor-CLI и сделать полный запуск командами: https://docs.cursor.com/en/cli/overview\n- Изучить AI-инструменты для проверки качества кода (попробовать минимум 2–3 из существующих)",
      "criteria": "- Рост качества\n- Масштабирование удачных практик\n- Составлен чек-лист качества тестов (стабильность, читаемость, идентификаторы, ожидания, изоляция)\n- Подготовлен шаблон отчёта/комментария перед PR и добавлен в проект\n- Добавлен локальный шаг запуска проверки одним действием\n- Проверка применена к ≥5 PR\n- Сведена статистика замечаний и доля принятых\n- Выделены подходящие проверки для проекта БК\n- Зафиксированы результаты работы: что хорошо, что плохо\n- Рассказаны детали на собрании отдела или автоматизаторов",
      "durationWeeks": 4
    },
    {
      "category": "AQA._Инструменты_и_технологии",
      "skillName": "XCUITest",
      "level": 2,
      "goal": "Автогенерация автотестов",
      "description": "- Построить prompt-chaining и контекстные шаблоны (\"описание сценария > сгенерированный каркас теста > доработка > PR\")\n- Разработать библиотеку промптов для автогенерации snapshot-, компонентных и сценарных тестов; включить чек-листы контекста (архитектура экрана, зависимости, данные)\n\nhttps://surfstudio.gitlab.yandexcloud.net/internal/ai-boost/aqa-prompts\n\nhttps://docs.google.com/presentation/d/1gdwJJVIexepAziKEVPmdE0_LMmgKGD2guvkAYHWqRx0/edit?slide=id.g36e4b4a5a08_0_225#slide=id.g36e4b4a5a08_0_225\n\n- Сгенерировать через Cursor слой моков по OpenAPI/контрактам (5+ endpoints) для стабильности UI-тестов оффлайн\n- Автогенерировать компонентные тесты для ключевых UI-компонентов (10 шт.) через Cursor по спецификациям; привести к Page Object",
      "criteria": "- Рост скорости и качества\n- Масштабирование удачных практик\n- 1) Описан стандарт входа/выхода для каждого шага (что даём на вход, что ждём на выходе)\n- 2) Подготовлены версии запросов для каждого шага и их инструкции по применению\n- 3) Проведено сравнение на не менее чем 5 реальных задачах\n- 4) Итоги сведены в таблицу с показателями (время, доля правок, принятие без правок)\n- 5) Выбран лучший вариант и оформлена папка шаблонов с примерами\n- 6) Добавлен короткий порядок действий \"как запускать связку шаг за шагом\"\n- (Моки) 1) Описан стандарт входа/выхода\n- (Моки) 2) Сохранен промт или рекомендации по использованию\n- (Компоненты) 1) Составлен список из 10 компонентов и критерии приёмки\n- (Компоненты) 2) Для каждого компонента создан скелет объекта страницы/робота\n- (Компоненты) 3) Подготовлены фикстуры нормальных и крайних данных\n- (Компоненты) 4) Добавлены и запущены тесты локально\n- (Компоненты) 5) Добавлены в общий прогон в CI\n- (Компоненты) 6) Обновлена таблица покрытия интерфейса",
      "durationWeeks": 8
    },
    {
      "category": "Работа_с_сотрудниками",
      "skillName": "Умение работать с фидбеком",
      "level": 1,
      "goal": "Сформировать комплексный навык работы с фидбэком",
      "description": "- Самостоятельно найти и изучить информацию о методах обратной связи. Выбрать 3–4 наиболее полезных/применимых и кратко описать их суть. Сформировать документ и приложить ссылку в Артефактах\n- Запросить у RM и коллег текущий фидбэк по своей работе (в т.ч. в рамках грейдирования). Дополнить документ: проанализировать качество донесения ОС, выделить замечания/точки роста, описать согласие/возражения по каждому пункту. Сформировать программу корректирующих воздействий\n- В течение срока ИПР работать по программе, вести промежуточные записи и регулярную рефлексию. В последние 2 недели дополнить документ итогами: что получилось/не получилось и почему. Обсудить результаты с ментором\n- Разобрать несколько учебных ситуаций по процессу ОС. Письменно ответить в том же файле, при необходимости обсудить с ментором на итоговой встрече\n- На итоговой встрече по ИПР дать ментору обратную связь по одной из техник ОС (в письменном виде можно оформить в Pyrus)",
      "criteria": "- Документ с описанием нескольких основных техник ОС (проверен ментором)\n- Сформирован список точек роста и программа корректирующих воздействий (проверена ментором)\n- Описаны реализованные корректирующие воздействия и результаты работы с ОС\n- Письменный разбор учебных ситуаций (проанализирован ментором)\n- Сформирована ОС ментору по одной из техник и утверждена в рамках приемки протокола ИПР",
      "durationWeeks": 8
    },
    {
      "category": "Основы_тестирования",
      "skillName": "Уровни тестирования",
      "level": 2,
      "goal": "Углубить знания в области пирамид и уровней тестирования, проанализировать реализацию концепции на текущем проекте",
      "description": "- Самостоятельно изучить материалы по уровням и пирамидам тестирования. Сформировать документ, в котором описано: какие уровни тестирования выделяют и за что отвечает каждый уровень; как выглядит пирамида тестирования, почему это именно пирамида, какие виды пирамид бывают. Документ приложить ссылкой в Артефакты\n- Проанализировать процесс тестирования на проекте KFC с точки зрения уровней тестирования. Описать пирамиду тестирования на проекте, указать, какие виды тестирования и конкретные активности выполняются для каждого уровня. Проанализировать наполнение уровней пирамиды и выявить возможные проблемы/недостатки",
      "criteria": "- Документ с описанием основных теоретических аспектов касательно уровней и пирамид тестирования (проверяется ментором)\n- Проведён анализ и описание процесса тестирования на проекте с точки зрения распределения по уровням (проверяется ментором и при необходимости RM)",
      "durationWeeks": 4
    },
    {
      "category": "AQA._Инструменты_и_технологии",
      "skillName": "Типы автоматизированного тестирования",
      "level": 1,
      "goal": "Изучить роль и влияние автотестов и получить базовый навык написания нативных автотестов для Flutter-приложения",
      "description": "- Самостоятельно найти информацию о типах автоматизированного тестирования. Схематично описать их в документе. На примере приложений KFC (веб и МП) проанализировать, какие типы автотестов могут быть реализованы на проекте; расставить их по приоритету, обосновать порядок и описать влияние на процесс ручного тестирования. Документ приложить ссылкой в Артефакты\n- Изучить инструкцию по сборке приложения (зимний буткемп 2024): https://docs.google.com/document/d/13gtOsg-69UDrmc7stRXxj8gIuTtZIiR10lAEed51lNA/edit?tab=t.0. Проверить/донастроить ПК, скачать репозиторий и собрать приложение\n- Посмотреть запись занятия: https://www.youtube.com/watch?v=_1N4qSssYZg и выполнить домашнее задание по написанию автотестов: https://docs.google.com/document/d/1TJY7SnLt3ZgVDgK5OY9SMSW8vr042--KBCdENNqAYV0/edit?tab=t.0. Результат (архив/репозиторий) приложить в Артефакты\n- Обсудить с ментором результаты, основные сущности в автотестах, назначение файлов и т.д. (программа обсуждения — от ментора)",
      "criteria": "- Документ с описанием типов автотестов, их роли/влияния и применимости на проекте KFC (ревью ментором)\n- Собранное приложение, готовое к реализации автотестов\n- Реализованные автотесты в рамках домашнего задания (подтверждено ссылкой на архив/репозиторий и демонстрацией ментору)\n- На обсуждении продемонстрировано понимание роли файлов и элементов в архитектуре автотестов Flutter-приложений",
      "durationWeeks": 8
    },
    {
      "category": "Управление_проектом",
      "skillName": "Работа с техдолгом",
      "level": 2,
      "goal": "Освоение навыка ведения технического долга на проекте",
      "description": "- Изучить статью по основным обязанностям ВТП\n  https://wiki.surfstudio.ru/pages/viewpage.action?pageId=41333601\n- Изучить статью по работе с техдолгом\n  https://wiki.surfstudio.ru/pages/viewpage.action?pageId=28711720\n- Изучить минимум 3 техдолга с разных проектов и выписать впечатления (что понравилось/не понравилось, плюсы/минусы, что улучшить, нюансы, вопросы)\n- Проанализировать свой текущий проект и создать/актуализировать техдолг. Получить фидбек от другого QA (РМ/ментор) и внести правки\n- В течение 4 недель еженедельно отслеживать прогресс по задачам техдолга и фиксировать его в таблице\n- По итогам: проанализировать появившиеся/выполненные задачи техдолга, как раньше обнаруживать неосознанный техдолг, полезность выполненных задач, что получилось хорошо/что улучшить; описать впечатления",
      "criteria": "- Знание обязанностей ВТП, что такое техдолг, разница между осознанным/неосознанным техдолгом, типы задач техдолга, принципы отбора/приоритезации задач\n- Файл со ссылками на 3 изученных техдолга и впечатления по каждому\n- Создана/актуализирована таблица актуальных задач техдолга проекта; запланированы задачи и назначены исполнители; учтён фидбек QA\n- Таблица/файл с понедельным прогрессом по техдолгу за 4 недели; выполнено минимум 2 задачи техдолга за период\n- Отдельный файл с анализом результатов работы с техдолгом и впечатлениями; результаты обсуждены с ментором",
      "durationWeeks": 8
    },
    {
      "category": "Оценка_работ_тестирования",
      "skillName": "Оценка задач тестирования",
      "level": 1,
      "goal": "Освоение навыка \"Оценка работ тестирования\"",
      "description": "- Изучить факторы, влияющие на оценку тестирования (можно использовать GPT)\n- Изучить методы оценки: экспертный, дедуктивный, индуктивный\n- Точка А: определить, какие задачи на проекте/вне проекта можно оценить; выбрать задачи, по которым получится проверить попадание в оценку (минимум 3)\n- Оценить спринт (этап) или несколько задач (минимум 3) всеми тремя методами\n- Сравнить полученные оценки, проанализировать расхождения (почему), какая оценка ближе к реальной, какой метод проще в применении\n- После выполнения задач проанализировать попадание/непопадание (±10% и более) и причины",
      "criteria": "- Выписаны основные факторы, которые стоит учитывать при оценке задач тестирования\n- Знает методы оценки (экспертный, дедуктивный, индуктивный) и как их применять\n- Определены задачи для оценки (минимум 3)\n- Оценен спринт или несколько задач (минимум 3) всеми тремя методами\n- Подготовлен файл/документ/таблица со сравнением оценок по задачам тремя методами\n- Приведены рассуждения о попадании в оценки и о непопаданиях (более чем ±10%) с причинами",
      "durationWeeks": 4
    },
    {
      "category": "Инструменты_и_технологии",
      "skillName": "Git",
      "level": 2,
      "goal": "Улучшить теоретические знания по работе с Git, описать Git-flow AQA + DEV для проекта Бауцентр",
      "description": "- Задача 1: Проанализировать способы решения критических ситуаций и углубиться в часто используемые команды Git. Зафиксировать ответы в документе:\n  - Что такое force push и когда он нужен (на примере Бауцентра)\n  - Что такое rebase и interactive rebase, когда их выполнять (на примере Бауцентра)\n  - Что такое git cherry-pick и когда он нужен (на примере Бауцентра)\n  - Что такое git bisect и когда он нужен (на примере Бауцентра)\n  - Что значит \"переписать историю\": как и когда это допустимо, в каких ситуациях возникает потребность\n  - Что делать, если reset-нул ветку с автотестами до ветки разработки и потерял изменения\n- Задача 2: Проанализировать и зафиксировать Git‑процесс команды AQA + DEV на Бауцентре:\n  - Кого проставляем в ревьюеры у MR/PR\n  - Дедлайны на ревью\n  - От кого ждём аппрувы\n  - Кто отвечает за merge тестов и локаторов на платформах\n  - Дополнить статью: https://wiki.surfstudio.ru/pages/viewpage.action?pageId=72354245",
      "criteria": "- Наличие документа с ответами по ключевым Git‑командам и сценариям (force push, rebase/interactive rebase, cherry‑pick, bisect, переписывание истории, recovery после reset)\n- Наличие и актуализация статьи по Git‑процессу AQA в конфлюенсе проекта: https://wiki.surfstudio.ru/pages/viewpage.action?pageId=70189689\n- Прозрачность процесса взаимодействия AQA + DEV (при необходимости подтверждена опросом участников)\n- Материал пригоден для онбординга: фиксирует роли/ответственности и SLA ревью",
      "durationWeeks": 4
    },
    {
      "category": "AQA._Технические_навыки",
      "skillName": "Качество кода",
      "level": 2,
      "goal": "Узнать полезные для автотестирования подходы (SOLID, KISS, Shift Left Testing) и проанализировать применимость на проекте Бауцентр",
      "description": "- Изучить принципы SOLID, KISS, Shift Left Testing и выделить тесты, требующие улучшений\n- Проанализировать код автотестов на проекте: что соответствует принципам (каким именно), что нет и как улучшить\n  Примечание: при возможности реализовать пример автотеста с применением принципов и/или рассказать о них на собрании автоматизаторов\n- Продумать и зафиксировать стратегию перехода Бауцентра на Shift Left Testing: возможен ли переход на нативные тесты, что потребуется",
      "criteria": "- Документ с описанием:\n  1) проблем, существующих в написанных тестах\n  2) рефлексии по Shift Left на проекте\n  3) стратегии перехода Бауцентра на написание нативных тестов (пригодно для повышения качества автотестов)\n- По возможности — пример автотеста с применением принципов и/или доклад на собрании автоматизаторов",
      "durationWeeks": 4
    },
    {
      "category": "Личная_производительность",
      "skillName": "Скорость написания (отладки) тестов",
      "level": 2,
      "goal": "Увеличить скорость написания и отладки тестов",
      "description": "- Задача 1: В течение месяца замерять время, причины и способы отладки; вести журнал\n- Задача 2: На основе анализа сформировать стандартные подходы по отладке и применять их в ходе ИПР; дополнять документ по мере появления новых кейсов (примерные причины: частая актуализация тестов; переименования локаторов; новые параметры запросов, отсутствующие в моках; неудобства процессов и типовые проблемы)\n- Задача 3: Перед завершением ИПР повторно замерить время на отладку, сравнить с начальным и сделать выводы",
      "criteria": "- Зафиксирован базовый замер времени на отладку и финальный замер; сформирован вывод об изменении скорости\n- Подготовлен документ: время, причины, способы отладки; систематизированы причины и подходы\n- Определены и внедрены стандартные подходы по отладке для типовых причин; документ регулярно дополнялся\n- Финальный раздел с повторным замером, сравнением с начальным и выводами",
      "durationWeeks": 4
    }
  ]
  